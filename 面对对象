#对象（object）

##什么是对象
    #对象是内存中专门用来存储数据的一块区域
    #对象中可以存放各种数据
    #对象由三部分组成：
        #1.id
        #2.type
        #3.value

##面向对象（oop）
    #Python是一门面向对象的编程语言
    #所谓的面向对象的语言，就是Python中的所有操作都是通过对象来进行的
    #面向过程的编程语言
        #面向过程指将程序的逻辑分解为一个一个的步骤，通过每个步骤的抽象，来完成程序
        #这种方式编写的代码往往只是用于一个功能，如果要实现别的功能，往往要重新编写代码，可复用性比较低
        #这种编程方式符合人类思维，可复用性低，并且难于维护
    #面向对象的编程语言
        #关注的是对象，而不关注过程
        #比较容易阅读，比较容易维护，容易复用

##类（class）
#我们目前所学过的对象都是Python内置的对象
    #内置对象并不能满足所有需求，所以在开发中经常需要自定义对象
    #类相当于图纸，在程序中需要根据类创建对象
    #类就是对象的图纸
    #我们称对象是类的实例（instance）
    #如果多个对象是通过一个类创建。我们称这些对象为一类对象
    #像int（） float（）.....这些都是类
    #创建一个int类的实例 等价于 a=10
    #我们自定义的类，都需要大写字母开头
    #类也是一个对象，用来创建对象的对象
    #类是type类型
#定义一个简单的类
'''
class 类名([父类])：
    代码块
'''
class MyClass():
    pass
print(MyClass)
#使用类创建对象，就像调用函数
#isinstance（）用来检查一个对象是否是一个类的实例
print(id(MyClass),type(MyClass))
#可以向对象中添加变量
#语法：对象.属性名 = 属性值
##使用类创建对象的流程
    #1.创建一个变量
    #2.在内存中创建一个新对象
    #3.执行类的代码块中的代码（只在类定义的时候执行一次）
    #4.——init——（self）方法执行
    #5.将对象的id赋值给变量
#init会在对象创建以后离开执行
#init可以向新创建的对象中初始化属性
##类的定义
    #类和对象都是对现实生活中的十位或程序中的内容的抽象
    #实际上所有的事物都有两部分构成：
        #1.数据（属性）
        #2.行为（方法）
    #在类的代码块中，我们可以定义变量和函数，
        #变量会成为该类实例的公共属性，所有的该类实例都可以通过 对象名.属性名 的形式访问
        #函数会成为该类实例的公共方法，所有该类实例都可以通过 对象.方法名（） 的形式调用方法

    #注意：
        #方法调用时，第一个参数有解析器自动传递，所以定义方法时，至少要定义一个形参
#在类中可以定义一些特殊方法（魔术方法）
#特殊方法都是以——开头，——结尾的方法
#特殊方法不需要我们自己调用
#特殊方法将会在特殊的时刻自动调用
##类的基本结构
    #class 类名([父类])：
        #公共属性。。。
    #对象的初始化方法
    #def ——init——（self，.....）：
        #。。。。。
    #其他的方法
