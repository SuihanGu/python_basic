'''

'''
'''

    列表（list）
        列表是python 中的一个对象
        对象（object）是内存中专门用来储存指定数据的一块区域
        之前学习的对象，像数值，它只能保存一个单一数据
        列表中可以保存多个有序数据
        列表是用来存储对象的对象的
        列表的使用：
            1.列表的创建
                通过[]创建列表
            2.操作列表中的数据
'''
'''
my_list = []    #创建一个空列表
#列表中存储的数据，我们称为元素
#一个列表中可以有多个元素，也可以在创建列表时，来指定列表中的元素
my_list = [10]  #创建一个只包含一个元素的列表
print(my_list)

#党项列表添加多个元素时，用','隔开
my_list = [10,20,30,40,50]

#列表中可以保存任意对象（百宝箱）
my_list = [10,None,'hello','123']
print(my_list)

#列表中的对象都会按照插入的顺序存储到列表中
#我们可以通过索引（index）来获取列表中的元素
    #索引是元素在列表中的位置，列表中的每一个元素都有一个索引
    #索引从0开始
#通过索引获取列表中的元素
#语法：my_list = [索引]
print(my_list[1])

#如果使用的索引超过了最大范围，会抛出异常    IndexError: list index out of range

#获取列表长度
#len()函数，获取列表长度,获取的值为最大索引长度+1
print(len(my_list))
'''

'''
#切片
    #切片指从现有列表中，获取一个子列表
    #创建一个列表，一般创建列表时，变量的名字会使用复数
    #列表的索引可以是负数
    #如果索引是负数，则从后向前数
stus = ['孙悟空','唐僧','猪八戒','白骨精']
    #通过切片获取指定元素
    #语法：列表[起始:结束]
    #   通过切片获取元素时，会包括起始位置的元素，不包括结束位置的元素
    #   做切片操作时 ，总会返回一个新列表，不会影响原来的列表
    #   起始和结束位置的索引都可以省略不写
print(stus[1:4])
    #语法：列表[起始:结束:步长]
    #步长表示，每次获取元素的间隔，默认值是1
#通用操作
#   +和*
#   in和 not in
#   in检查指定元素是否存在于列表中
print('123' in stus)
#   len()
#   min()
#   max()
#   两个方法（method）,方法和函数基本上是一样，只不过方法必须通过 对象.方法（）的形式调用
#   xxx.print() 方法实际上就是和对象关系紧密的函数
#   s.index() 获取指定元素在列表中的第一次出现的索引
#   s.count() 统计指定元素在我们列表中出现的次数
#   
#
#
'''
#序列（sequence）
    #序列是python中最基本的一种数据结构
    #数据结构指计算机中数据存储的方式
    #序列用于保存一组有序数据，所有的数据在序列中都有唯一的位置（索引）
    #   并且序列中的数据会按照添加的顺序来分配索引
    #序列的分类：
    #   可变序列：
    #       列表
    #   不可变序列：
    #       字符串
    #       元组（tuple）

#修改元素
    #直接通过索引修改
stus = ['gyhfyfy','dfff','edferfvt','jii','44444','101']
stus[0] = 'sunwukong'
print(stus)
    #通过del删除
del stus[2]
print(stus)
    #通过切片来修改,在给些切片进行赋值时，只能使用序列
stus[0:2] = '123456'
print(stus)
stus[0:0] = 'scds'       # 像索引为0的位置插入元素
                        # 当设置了步长时，序列中元素的个数必须和切片中元素的个数一致
    #通过切片删除
#以上操作只适用于可变序列


#遍历列表，指的就是将列表中所有的元素取出来
a = 0
while a < 4 :
    print(stus[a])
    a+=1
#通过while循环遍历列表
#通过for循环遍历
#   语法：
#       for 变量 in 序列：
#                   代码块
#for循环的代码块会执行多少次，序列中有几个元素就会执行多少次
#   每执行一次就会将序列中的元素赋值给变量，所以我们可以通过变量，来获取列表中的元素


